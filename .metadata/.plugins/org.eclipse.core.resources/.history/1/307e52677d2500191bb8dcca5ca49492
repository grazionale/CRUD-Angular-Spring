package com.grazionale.comercial.controller;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;
import java.util.Optional;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.server.ResponseStatusException;

import com.grazionale.comercial.model.Oportunidade;
import com.grazionale.comercial.repository.OportunidadeRepository;

@RestController
@RequestMapping("/oportunidades") 
public class OportunidadeController {
	
	@Autowired
	private OportunidadeRepository oportunidades;
	
	@GetMapping
	public List<Oportunidade> listar() {
		
		return oportunidades.findAll();
		
	}
	
	@GetMapping("/{id}")
	public ResponseEntity<Oportunidade> buscar(@PathVariable long id){

		Optional<Oportunidade> oportunidade = oportunidades.findById(id);
		
//		
//		if(oportunidade.isEmpty()) {
//			return ResponseEntity.notFound().build();
//		}
//		
		return ResponseEntity.ok(oportunidade.get()); //Get pega o que a oportunidade que 
		//está encapsulada dentro do Optional
				
	}
	
	@PostMapping
	@ResponseStatus(HttpStatus.CREATED)
	public Oportunidade adicionar(@Valid @RequestBody Oportunidade oportunidade) {
		Optional<Oportunidade> oportunidadeExistente = oportunidades
				.findByDescricaoAndNomeProspecto(oportunidade.getDescricao(), 
						oportunidade.getNomeProspecto());
		if(oportunidadeExistente.isPresent()) {
			throw new ResponseStatusException(HttpStatus.BAD_REQUEST, 
					"Já existe uma oportunidade para este prospecto com esta mesma descrição");
		}
		
		return oportunidades.save(oportunidade);
	}
	
	public void remover(@PathVariable long id) {
		oportunidades.deleteById(id);
	}
	
}
